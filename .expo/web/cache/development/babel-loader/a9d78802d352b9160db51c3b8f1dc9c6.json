{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/landrik/Documents/4.Projects/aws-amplify-rn/App.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport awsExports from \"./src/aws-exports\";\nimport { createTodo } from \"./src/graphql/mutations\";\nimport { listTodos } from \"./src/graphql/queries\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nAmplify.configure(awsExports);\nvar initialState = {\n  name: '',\n  description: ''\n};\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  var setInput = function setInput(key, value) {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, _defineProperty({}, key, value)));\n  };\n\n  var fetchTodo = function fetchTodo() {\n    var todoData, _todos;\n\n    return _regeneratorRuntime.async(function fetchTodo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listTodos)));\n\n          case 3:\n            todoData = _context.sent;\n            _todos = todoData.data.listTodos.items;\n            setTodos(_todos);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error fetching todos');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var addTodo = function addTodo() {\n    var todo;\n    return _regeneratorRuntime.async(function addTodo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(!formState.name || !formState.description)) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            todo = _objectSpread({}, formState);\n            setTodos([].concat(_toConsumableArray(todos), [todo]));\n            setFormState(initialState);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createTodo, {\n              input: todo\n            })));\n\n          case 8:\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('error creating todo:', _context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    fetchTodo();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Amplify Todos\"), React.createElement(\"input\", {\n    onChange: function onChange(event) {\n      return setInput('name', event.target.value);\n    },\n    style: styles.input,\n    value: formState.name,\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(\"input\", {\n    onChange: function onChange(event) {\n      return setInput('description', event.target.value);\n    },\n    style: styles.input,\n    value: formState.description,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"create todo\"), todos.map(function (todo, index) {\n    return React.createElement(\"div\", {\n      key: todo.id ? todo.id : index,\n      style: styles.todo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, React.createElement(\"p\", {\n      style: styles.todoName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, todo.name), React.createElement(\"p\", {\n      style: styles.todoDescription,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, todo.description));\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"hello world\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/landrik/Documents/4.Projects/aws-amplify-rn/App.tsx"],"names":["StatusBar","React","useEffect","useState","Amplify","API","graphqlOperation","awsExports","createTodo","listTodos","configure","initialState","name","description","App","formState","setFormState","todos","setTodos","setInput","key","value","fetchTodo","graphql","todoData","data","items","console","log","addTodo","todo","input","styles","container","event","target","map","index","id","todoName","todoDescription","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport awsExports from './src/aws-exports';\n\nimport { createTodo } from './src/graphql/mutations';\nimport { listTodos } from './src/graphql/queries';\nimport { StyleSheet, Text, View } from 'react-native';\n\nAmplify.configure(awsExports);\n\nconst initialState = { name:'', description: ''}\n\nexport default function App() {\n  const [formState, setFormState] = useState(initialState)\n  const [todos, setTodos] = useState([]);\n\n  const setInput = (key, value) => {\n    setFormState({ ...formState, [key]: value})\n  }\n\n  const fetchTodo = async() => {\n    try {\n      \n      const todoData = await API.graphql(graphqlOperation(listTodos))\n      const todos = todoData.data.listTodos.items;\n      setTodos(todos)\n    } catch (error) {\n      console.log('error fetching todos')\n    }\n  }\n\n  const addTodo = async() => {\n    try {\n      if(!formState.name || !formState.description)\n      return \n        const todo = { ...formState }\n        setTodos([ ...todos, todo])\n        setFormState(initialState)\n        await API.graphql(graphqlOperation(createTodo, {\n          input: todo }))\n    } catch (error) {\n      console.log('error creating todo:', error)\n    }\n  }\n\n  useEffect(() => {\n    fetchTodo()\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      <h2>Amplify Todos</h2>\n      <input \n        onChange={event => setInput('name', event.target.value)}\n        style={styles.input}\n        value={formState.name}\n        placeholder='Name'\n      />\n      <input \n        onChange={event => setInput('description', event.target.value)}\n        style={styles.input}\n        value={formState.description}\n        placeholder='Description'\n      />\n\n      <button>create todo</button>\n\n      {\n        todos.map((todo, index) => (\n          <div key={todo.id ? todo.id : index} style={styles.todo}>\n            <p style={styles.todoName}>{todo.name}</p>\n            <p style={styles.todoDescription}>{todo.description}</p>\n          </div>\n        ))\n      }\n\n      <Text>hello world</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}